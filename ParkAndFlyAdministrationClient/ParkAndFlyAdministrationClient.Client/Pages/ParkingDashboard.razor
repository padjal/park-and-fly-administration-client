@page "/parking-dashboard/{parkingId}"
@using ParkAndFlyAdministrationClient.Data.Models
@using ParkAndFlyAdministrationClient.Data.Services
@using System.Diagnostics
@inject IReservationService ReservationService
@inject IParkingService ParkingService
@rendermode @(new InteractiveAutoRenderMode(prerender: false))

<RadzenStack Orientation="Orientation.Horizontal" AlignItems="AlignItems.Center" Gap="15px">
    <h3>@_parking.Name Dashboard</h3>
    <p>Address: @_parking.Address</p>

    <RadzenButton Click=Refresh Icon="refresh" ButtonStyle="ButtonStyle.Light" />
</RadzenStack>

<RadzenRow>
    <RadzenColumn>
        <RadzenCard>
            <RadzenArcGauge Style="width: 100%; height: 250px;">
                <RadzenArcGaugeScale Step="10" Min="0" Max=@_parking.MaxCars MinorStep="2" Radius="1.5" TickPosition=@tickPosition Y="0.9" Margin="0">
                    <RadzenArcGaugeScaleValue Value=@_currentRreservationsCount ShowValue=@showValue>
                        <Template Context="pointer">
                            <h4>
                                @pointer.Value
                            </h4>
                            <p>Current reservations</p>
                        </Template>
                    </RadzenArcGaugeScaleValue>
                </RadzenArcGaugeScale>
            </RadzenArcGauge>
        </RadzenCard>
    </RadzenColumn>

    <RadzenColumn Style="height: 100%">
        <RadzenStack Orientation="Orientation.Vertical" Gap="10px">
            <RadzenCard Style="position: relative;">
                <RadzenText TextStyle="TextStyle.H6">Revenue this month</RadzenText>
                <RadzenText TextStyle="TextStyle.H2" Class="rz-color-success" Style="position: absolute; right: 1.5rem; top: 1rem;">@_revenueThisMonth</RadzenText>
                <RadzenChart Style="width: 100%; height: 60px; margin-bottom: -30px;">
                    <RadzenValueAxis Visible="false" />
                    <RadzenCategoryAxis Visible="false" />
                    <RadzenColumnOptions Margin="10" />
                    <RadzenLegend Visible="false" />
                </RadzenChart>
            </RadzenCard>

            <RadzenCard Style="position: relative;">
                <RadzenText TextStyle="TextStyle.H6">Reservations this month</RadzenText>
                <RadzenText TextStyle="TextStyle.H2" Class="rz-color-warning" Style="position: absolute; right: 1.5rem; top: 1rem;">@_reservationsThisMonth</RadzenText>
                <RadzenChart Style="width: 100%; height: 60px; margin-bottom: -30px;">
                    <RadzenValueAxis Visible="false" />
                    <RadzenCategoryAxis Visible="false" />
                    <RadzenColumnOptions Margin="10" />
                    <RadzenLegend Visible="false" />
                </RadzenChart>
            </RadzenCard>

            <RadzenCard Style="position: relative;">
                <RadzenText TextStyle="TextStyle.H6">Total reservations</RadzenText>
                <RadzenText TextStyle="TextStyle.H2" Class="rz-color-info" Style="position: absolute; right: 1.5rem; top: 1rem;">@_reservationsInTotal</RadzenText>
                <RadzenChart Style="width: 100%; height: 60px; margin-bottom: -30px;">
                    <RadzenValueAxis Visible="false" />
                    <RadzenCategoryAxis Visible="false" />
                    <RadzenColumnOptions Margin="10" />
                    <RadzenLegend Visible="false" />
                </RadzenChart>
            </RadzenCard>
        </RadzenStack>
        
    </RadzenColumn>
    
    <RadzenColumn>
        <RadzenCard>
            <RadzenChart>
                <RadzenLineSeries Smooth=true Data=@currentYearReservations CategoryProperty="Date" Title="2023" LineType="LineType.Dashed" ValueProperty="Reservations">
                    <RadzenMarkers Visible=true MarkerType="MarkerType.Square" />
                    <RadzenSeriesDataLabels Visible=false />
                </RadzenLineSeries>
                @* <RadzenLineSeries Smooth=true Data="@revenue2024" CategoryProperty="Date" Title="2024" ValueProperty="Revenue">
                <RadzenMarkers Visible="@showMarkers" MarkerType="MarkerType.Circle" />
                <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenLineSeries> *@
                <RadzenCategoryAxis Padding="20" />
                <RadzenValueAxis>
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Reservations" />
                </RadzenValueAxis>
            </RadzenChart>
        </RadzenCard>
    </RadzenColumn>

    

    @* <div class="container">
            <div class="col-sm-12 my-5">
                <RadzenChart>
                    <RadzenLineSeries Smooth=true Data=@currentYearReservations CategoryProperty="Date" Title="2023" LineType="LineType.Dashed" ValueProperty="Reservations">
                        <RadzenMarkers Visible=true MarkerType="MarkerType.Square" />
                        <RadzenSeriesDataLabels Visible=false />
                    </RadzenLineSeries>
                    <RadzenLineSeries Smooth=true Data="@revenue2024" CategoryProperty="Date" Title="2024" ValueProperty="Revenue">
                        <RadzenMarkers Visible="@showMarkers" MarkerType="MarkerType.Circle" />
                        <RadzenSeriesDataLabels Visible="@showDataLabels" />
                    </RadzenLineSeries>
                    <RadzenCategoryAxis Padding="20" />
                    <RadzenValueAxis>
                        <RadzenGridLines Visible="true" />
                        <RadzenAxisTitle Text="Reservations" />
                    </RadzenValueAxis>
                </RadzenChart>
            </div>
       
    </div> *@
</RadzenRow>

<RadzenRow>
    <RadzenColumn>
        <h2>Current reservations</h2>
        <RadzenDataGrid style="height: 535px" @ref="grid" IsLoading=@isLoading Data="@CurrentReservations" LoadData="@LoadData" AllowSorting="true" AllowFiltering="true" AllowPaging="true" PageSize="4" PagerHorizontalAlign="HorizontalAlign.Center" TItem="Reservation" ColumnWidth="200px">
            <Columns>
                <RadzenDataGridColumn TItem="Reservation" Property="CarId" Title="Car Id" Width="160px" />
                <RadzenDataGridColumn TItem="Reservation" Property="From" Title="From" Width="160px" />
                <RadzenDataGridColumn TItem="Reservation" Property="To" Title="To" Width="160px" />
                <RadzenDataGridColumn TItem="Reservation" Property="Price" Title="Price" Width="160px" />
                <RadzenDataGridColumn TItem="Reservation" Property="IsPaid" Title="Paid" Width="160px" />
            </Columns>
        </RadzenDataGrid>
        <p>@log</p>
    </RadzenColumn>

    <RadzenColumn>
        <h2>Upcoming reservations</h2>
        <RadzenDataGrid style="height: 535px" @ref="grid" IsLoading=@isLoading Data="@UpcommingReservations" LoadData="@LoadData" AllowSorting="true" AllowFiltering="true" AllowPaging="true" PageSize="4" PagerHorizontalAlign="HorizontalAlign.Center" TItem="Reservation" ColumnWidth="200px">
            <Columns>
                <RadzenDataGridColumn TItem="Reservation" Property="CarId" Title="Car Id" Width="160px" />
                <RadzenDataGridColumn TItem="Reservation" Property="From" Title="From" Width="160px" />
                <RadzenDataGridColumn TItem="Reservation" Property="To" Title="To" Width="160px" />
                <RadzenDataGridColumn TItem="Reservation" Property="Price" Title="Price" Width="160px" />
                <RadzenDataGridColumn TItem="Reservation" Property="IsPaid" Title="Paid" Width="160px" />
            </Columns>
        </RadzenDataGrid>
    </RadzenColumn>
</RadzenRow>

<RadzenDialog />
<RadzenNotification />

@code {
    [Parameter]
    public string? ParkingId { get; set; }

    private Parking _parking = new Parking();
    private int _reservationsThisMonth;
    private int _revenueThisMonth;
    private int _reservationsInTotal;
    private int _currentRreservationsCount => CurrentReservations.Count();
    private int _parkingMaxCars => 100;

    private bool isLoading;

    public List<Reservation> CurrentReservations { get; set; } = new List<Reservation>();
    public List<Reservation> UpcommingReservations { get; set; } = new List<Reservation>();
    RadzenDataGrid<Reservation> grid;
    private string log;

    bool showValue = true;
    double value = 100;
    IEnumerable<GaugeTickPosition> tickPositions = Enum.GetValues(typeof(GaugeTickPosition)).Cast<GaugeTickPosition>();
    GaugeTickPosition tickPosition = GaugeTickPosition.Outside;

    protected override async Task OnInitializedAsync()
    {
        await LoadData(null);
    }

    class DataItem
    {
        public string Date { get; set; }
        public double Reservations { get; set; }
    }

    DataItem[] currentYearReservations = new DataItem[]
    {
        new DataItem
        {
            Date = "January",
            Reservations = 10
        },
        new DataItem
        {
            Date = "February",
            Reservations = 15
        },
        new DataItem
        {
            Date = "March",
            Reservations = 25
        },
        new DataItem
        {
            Date = "April",
            Reservations = 8
        },
    };

    async Task LoadData(LoadDataArgs args)
    {
        var timer = new Stopwatch();
        timer.Start();

        isLoading = true;

        int.TryParse(ParkingId, out int intParkingId);

        _parking = await ParkingService.GetParkingById(intParkingId);

        CurrentReservations = await ReservationService.GetCurrentReservationsAsync(ParkingId);
        UpcommingReservations = await ReservationService.GetUpcommingReservationsAsync(ParkingId);
        await GetReservationsStats();

        //await grid.Reload();

        timer.Stop();

        log = $"Data loaded in {timer.Elapsed.TotalMilliseconds}ms";

        isLoading = false;
    }

    async Task Refresh()
    {
        await LoadData(null); 
    }

    private async Task GetReservationsStats()
    {
        var reservationsThisMonth = await ReservationService.GetReservationsForTheMonthAsync(ParkingId);
        var allReservations = await ReservationService.GetReservationsAsync(ParkingId);

        _revenueThisMonth = (int)reservationsThisMonth.Sum(r => r.Price);
        _reservationsThisMonth = reservationsThisMonth.Count();
        _reservationsInTotal = allReservations.Count();
    }
}
