@using ParkAndFlyAdministrationClient.Data.Models
@inject NotificationService NotificationService
@inject Radzen.DialogService DialogService

<RadzenRow> 
    <RadzenColumn>
        <RadzenStack>
            <RadzenFormField AllowFloatingLabel="false" Text="Name" Style="width: 100%;">
                <RadzenTextBox @bind-Value="@Customer.FirstName" Style="width: 100%;" />
            </RadzenFormField>
            <RadzenFormField AllowFloatingLabel="false" Text="Surname" Style="width: 100%;">
                <RadzenTextBox @bind-Value="@Customer.LastName" Style="width: 100%;" />
            </RadzenFormField>
            <RadzenFormField AllowFloatingLabel="false" Text="Email" Style="width: 100%;">
                <RadzenTextBox @bind-Value="@Customer.Email" Style="width: 100%;" />
            </RadzenFormField>
        </RadzenStack>        
    </RadzenColumn>

    <RadzenColumn>
        <RadzenStack>
            <RadzenFormField AllowFloatingLabel="false" Text="Birthday" Style="width: 100%;">
                <RadzenDatePicker DateFormat="MM/dd/yyyy" @bind-Value=@Customer.Birthday Name="RadzenDatePickerBindValue" ShowCalendarWeek />
            </RadzenFormField>
            <RadzenFormField AllowFloatingLabel="false" Text="Phone Number" Style="width: 100%;">
                <RadzenTextBox @bind-Value="@Customer.PhoneNumber" Style="width: 100%;" />
            </RadzenFormField>
        </RadzenStack>
    </RadzenColumn>
</RadzenRow>

<RadzenButton class="mt-3" Style="width:100%" Text="Save" Click=@OnSaveButtonClicked />

 @code {
    [Parameter]
    public Customer Customer { get; set; }

    private async Task OnSaveButtonClicked()
    {
        NotificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Success,
                Duration = 40000,
                SummaryContent = ns =>@<RadzenText TextStyle="TextStyle.H6">User updated successfully.</RadzenText>,
        });

        DialogService.Close();
    }
}
